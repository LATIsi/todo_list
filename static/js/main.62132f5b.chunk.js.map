{"version":3,"sources":["component/Main.js","component/Context.js","component/TodoItem.js","component/List.js","component/MainHead.js","component/TodoCreate.js","App.js","reportWebVitals.js","index.js"],"names":["Main","children","console","log","className","initialTodos","id","text","done","TodoState","createContext","TodoDispatch","TodoNextId","todoReducer","state","action","type","concat","todo","map","List","filter","Error","TodoUseContext","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","TodoUpdate","styled","div","Remove","TodoItemBlock","CheckCircle","props","css","Text","TodoItem","onClick","React","memo","todos","MainHead","undoneCount","length","today","Date","dateymd","toLocaleDateString","year","month","day","daystr","weekday","CircleButton","button","open","Circle","InsertFormPositioner","InsertFormbg","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","autoFocus","placeholder","onKeyPress","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62132f5b.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../style/Background_style.css';\r\n\r\nfunction Main({ children }) {\r\nconsole.log('TodoItem Here');\r\n  return (\r\n  <div className=\"main_ground\">\r\n  { children }\r\n  </div>);\r\n}\r\n\r\nexport default Main;","import React, { useReducer, createContext, useContext, useRef} from 'react';\r\n\r\nconst initialTodos = [\r\n  {\r\n    id: 1,\r\n    text: '리스트1',\r\n    done: true\r\n  },\r\n  {\r\n    id: 2,\r\n    text: '리스트2',\r\n    done: true\r\n  },\r\n  {\r\n    id: 3,\r\n    text: '리스트3',\r\n    done: false\r\n  },\r\n  {\r\n    id: 4,\r\n    text: '리스트4',\r\n    done: false\r\n  },\r\n  {\r\n    id: 5,\r\n    text: '리스트5',\r\n    done: false\r\n  },\r\n  {\r\n    id: 6,\r\n    text: '리스트6',\r\n    done: false\r\n  }\r\n];\r\n\r\nconst TodoState = createContext();\r\nconst TodoDispatch = createContext();\r\nconst TodoNextId = createContext();\r\n\r\nconsole.log('Context Here');\r\n //initialState안의 항목들...-> List. map이나 concat이나 filter로 풀어줌!\r\nfunction todoReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'CREATE':\r\n      return state.concat(action.todo);\r\n      //아래의 것으로 했다가... text부분이 공백으로 들어와 실패\r\n      // const nextId = Math.max(...state.map(todo => todo.id)) + 1;\r\n      // console.log(` Context에서 입력받은 id의 값은 ${nextText}`);\r\n      // return state.concat({\r\n      //   id: nextId,\r\n      //   text: nextText,\r\n      //   done: false\r\n      // });\r\n    case 'TOGGLE':\r\n      return state.map(List =>\r\n        List.id === action.id ? { ...List, done: !List.done } : List\r\n      );\r\n    case 'REMOVE':\r\n      return state.filter(List => List.id !== action.id);\r\n\r\n    case 'UPDATE':\r\n    return state.filter(List => List.id !== action.id);\r\n    \r\n    default:\r\n      throw new Error(`해당하는 액션타입이 없음: ${action.type}`);\r\n  }\r\n}\r\n\r\nexport function TodoUseContext({ children }) {\r\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n  const nextId = useRef(7); //리스트 다음의 배열...\r\n  \r\n// app에서 감싸고나서\r\n// 그 안의 컴퍼넌트들을 적용하기 위해, 맨 안에 children을 넣어줌\r\n\r\n  return (\r\n    <TodoState.Provider value={state}>\r\n    <TodoDispatch.Provider value={dispatch}>\r\n      <TodoNextId.Provider value={nextId}>\r\n        {children}   \r\n      </TodoNextId.Provider>\r\n    </TodoDispatch.Provider>\r\n    </TodoState.Provider>\r\n  );\r\n}\r\n\r\n\r\n//1. 만약 useTodoState,dispatch,nextID가\r\n//APP.js에서 요소들이 TodoUseContext 로 감싸져있지 않다면 에러를 발생시키도록 if문 처리\r\n//2. 외부에서 호출하는건 먼저 app에서 TodoUseContext로 감쌌으니\r\n//이 밑의 useTodo~의 이름을 가진 useContext들을 원하는곳에 호출가능.\r\nexport function useTodoState() {\r\n  const context = useContext(TodoState);\r\n  if (!context) {\r\n    throw new Error('TodoUseContext를 찾지 못했습니다.');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n  const context = useContext(TodoDispatch);\r\n  if (!context) {\r\n    throw new Error('TodoUseContext를 찾지 못했습니다.');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useTodoNextId() {\r\n  const context = useContext(TodoNextId);\r\n  if (!context) {\r\n    throw new Error('TodoUseContext를 찾지 못했습니다.');\r\n  }\r\n  return context;\r\n}\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { BiCheck} from 'react-icons/bi';\r\nimport { RiDeleteBin6Line } from 'react-icons/ri';\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport '../style/Line_style.css';\r\nimport { useTodoDispatch } from './Context';\r\n\r\n\r\nconst TodoUpdate = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: #dee2e6;\r\n  font-size: 24px;\r\n  margin-left:1vw;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #ff6b6b;\r\n  }\r\n  display: none;\r\n`;\r\n\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: #dee2e6;\r\n  font-size: 24px;\r\n  margin-left:3vw;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #ff6b6b;\r\n  }\r\n  display: none;\r\n`;\r\n\r\n\r\nconst TodoItemBlock = styled.div`\r\n  flex-wrap: wrap;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 0.5vw;\r\n  width:70vw;\r\n  padding-bottom: 1vw;\r\n  margin-top:1vh;\r\n  position:relative;\r\n  left:2vw;\r\n  margin-right:5vw;\r\n  &:hover {\r\n    ${Remove} {\r\n      display: initial;\r\n    }\r\n    ${TodoUpdate} {\r\n      display: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n  width: 3vw;\r\n  height: 6.2vh;\r\n  border-radius: 24px;\r\n  border: 1px solid #ced4da;\r\n  font-size: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 5vw;\r\n  cursor: pointer;\r\n  ${props =>\r\n    props.done &&\r\n    css`\r\n      border: 1px solid #38d9a9;\r\n      color: #38d9a9;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  flex-basis: 50vw;\r\n  font-size: 20px;\r\n  text-align: left;\r\n  word-break:break-all;\r\n  color: #495057;\r\n  padding-bottom:1vh;\r\n  ${props =>\r\n    props.done &&\r\n    css`\r\n      color: #ced4da;\r\n    `}\r\n`;\r\n\r\nconsole.log('TodoItem Here');\r\nfunction TodoItem({ id, text, done}) {\r\n  //수정해야함..\r\n  const dispatch = useTodoDispatch();\r\n  const onToggle = () => dispatch({ type: 'TOGGLE', id });\r\n  const onRemove = () => dispatch({ type: 'REMOVE', id });\r\n  const onUpdate = () => dispatch({ type: 'UPDATE', id });\r\n  \r\n  return (\r\n    <TodoItemBlock>\r\n      <CheckCircle done={done} onClick={onToggle} >\r\n        {done && <BiCheck /> }\r\n      </CheckCircle>\r\n      <Text done={done}>{text}</Text>\r\n      <TodoUpdate onClick={onUpdate}>\r\n        <BsPencil/>\r\n      </TodoUpdate>\r\n      <Remove onClick={onRemove}>\r\n        <RiDeleteBin6Line />\r\n      </Remove>\r\n      <hr className=\"Line3\"/>\r\n    </TodoItemBlock>\r\n     );\r\n}\r\nexport default React.memo(TodoItem);","import React from 'react';\r\nimport '../style/Background_style.css';\r\nimport TodoItem from './TodoItem';\r\nimport { useTodoState } from './Context';\r\n\r\nfunction List() {\r\n  const todos = useTodoState();\r\n  console.log('List Here');\r\n\r\n  return (\r\n      <div className=\"list\">\r\n         {todos.map(todo => (\r\n              <TodoItem\r\n              key={todo.id}\r\n              id={todo.id}\r\n              text={todo.text}\r\n              done={todo.done}\r\n            />\r\n           ))}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport '../style/Background_style.css';\r\nimport '../style/Line_style.css';\r\nimport { useTodoState } from './Context';\r\n\r\nfunction MainHead() {\r\n  const todos = useTodoState();\r\n  console.log('main head todos( useTodoState() )  Here');\r\n  const undoneCount = todos.filter( todo => {\r\n    console.log(`${todo.text}의 id는 ${todo.id}이고 done값은 ${todo.done} 이다.`);\r\n     return todo.done === false ;\r\n  }).length;\r\n  \r\n // console.log(todos); //context에 있는 배열들을 불러옴\r\n // console.log(undoneCount); //context에 있는 배열을 filter로 done이 false인 애들을 넣어줌\r\n\r\n  const today = new Date();\r\n  const dateymd = today.toLocaleDateString('ko-KR', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric'\r\n  });\r\n  const daystr = today.toLocaleDateString('ko-KR', { weekday: 'long' });\r\n\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div  className=\"dayand\">\r\n          <div className=\"ymd\">{dateymd}</div>\r\n          <div className=\"day\">{daystr}</div>\r\n      </div>\r\n      <div className=\"tasks-left\">할 일 {undoneCount} 개 남음</div>       \r\n      <hr className=\"Line1\"/>\r\n      <hr className=\"Line2\"/>    \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default MainHead;","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoDispatch, useTodoNextId } from './Context';\r\n\r\nconst CircleButton = styled.button`\r\n  z-index: 2;\r\n  background: transparent;\r\n  cursor: pointer;\r\n  width: 5.5vw;\r\n  height: 12vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 60px;\r\n  position: fixed;\r\n  bottom: 20vh;\r\n  left:7.3vw;\r\n  \r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n  display: flex;\r\n\r\n  transition: 0.125s all ease-in;\r\n  ${props =>\r\n    props.open &&\r\n    css`\r\n      .Circle{\r\n        background: #ff8787;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst Circle = styled.button`\r\nbackground: #4BC6D7;\r\ncursor: pointer;\r\nwidth:6vw;\r\nheight: 36.5vh;\r\nleft:6vw;\r\nmargin-left:-1.8vw;\r\nbottom: -10.3vh;\r\nz-index: 1;\r\n  position: fixed;\r\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\r\n  border-radius: 3vw;\r\n  border: none;\r\n  outline: none;\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n\r\n  transition: 0.3s all ease-in;\r\n  ${props =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n      \r\n    `}\r\n`;\r\nconst InsertFormPositioner = styled.div`\r\n  width: 87vw;\r\n  height: 26vh;\r\n  bottom: 0;\r\n  left:8vw;\r\n  position: fixed;\r\n  background-color:#f8f9fa;\r\n`;\r\n\r\nconst InsertFormbg = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  top:0;\r\n  left:0;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  position:fixed;\r\n\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  background: #f8f9fa;\r\n  height: 26vh;\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 1vw;\r\n  margin-left:9vw;\r\n  margin-top:9vh;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 70vw;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nfunction TodoCreate() {\r\n  \r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState();\r\n\r\n  const dispatch = useTodoDispatch();\r\n  const nextId = useTodoNextId();\r\n  const onToggle = () => setOpen(!open);\r\n\r\n  const onChange = (e) =>{ setValue(e.target.value)};\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: 'CREATE',\r\n      todo: {\r\n        id: nextId.current,\r\n        text: value,\r\n        done: false\r\n      }\r\n    });\r\n    setOpen(false);\r\n    nextId.current += 1;\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <InsertFormbg>\r\n        <InsertFormPositioner>\r\n          <InsertForm onSubmit={onSubmit}>\r\n            <Input\r\n              autoFocus \r\n              placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\r\n              onKeyPress={onChange}\r\n            />\r\n          </InsertForm>\r\n        </InsertFormPositioner>\r\n        </InsertFormbg>\r\n      )}\r\n      <CircleButton onClick={onToggle} open={open}>\r\n        <MdAdd />\r\n      </CircleButton>\r\n      <Circle/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoCreate);","//import logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from './component/Main';\r\nimport './style/Background_style.css';\r\nimport './style/Line_style.css';\r\nimport List from './component/List';\r\nimport MainHead from './component/MainHead';\r\nimport TodoCreate from './component/TodoCreate';\r\nimport { TodoUseContext } from './component/Context';\r\n\r\nfunction App() {\r\n  return (\r\n   <>\r\n   <TodoUseContext>\r\n    <div className=\"bg1\"/>\r\n    <div className=\"bg2\"/>\r\n    <Main>\r\n      <MainHead/>\r\n      <List/>\r\n      <TodoCreate/>\r\n    </Main>\r\n    </TodoUseContext>\r\n   </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}